name: Build macOS App (.app)

on:
  workflow_dispatch:

env:
  PYTHON_VERSION: '3.11'
  PLAYWRIGHT_BROWSERS_PATH: ./ms-playwright
  NUITKA_ASSUME_YES_FOR_DOWNLOADS: "1"

jobs:
  build-mac:
    runs-on: macos-latest  # Apple Silicon runner

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Cache pip (macOS)
        uses: actions/cache@v4
        with:
          path: ~/Library/Caches/pip
          key: pip-mac-${{ runner.os }}-${{ env.PYTHON_VERSION }}-${{ hashFiles('**/requirements.txt') }}

      - name: Install deps and Playwright browsers
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt
          pip install nuitka ordered-set zstandard
          python -m playwright install chromium

      - name: Pack ms-playwright to TGZ
        run: |
          rm -f ms-playwright.tgz
          tar -czf ms-playwright.tgz ms-playwright
          rm -rf ms-playwright

      - name: Locate Tcl/Tk resource dirs (macOS)
        id: tcltk
        shell: bash
        run: |
          TCL=$(python -c 'import _tkinter, pathlib; root = pathlib.Path(_tkinter.__file__).resolve().parent.parent; print((root/"tcl").resolve())')
          TK=$(python -c 'import _tkinter, pathlib; root = pathlib.Path(_tkinter.__file__).resolve().parent.parent; print((root/"tk").resolve())')
          echo "tcl_dir=$TCL" >> "$GITHUB_OUTPUT"
          echo "tk_dir=$TK"  >> "$GITHUB_OUTPUT"
          echo "TCL=$TCL"
          echo "TK=$TK"


      - name: Build .app with Nuitka (macOS)
        run: |
          python -m nuitka app.py \
            --standalone \
            --onefile \
            --enable-plugin=tk-inter \
            --macos-create-app-bundle \
            --macos-app-name=WebImageSaver \
            --macos-app-version=1.0.0 \
            --include-data-dir="${{ steps.tcltk.outputs.tcl_dir }}=tcl" \
            --include-data-dir="${{ steps.tcltk.outputs.tk_dir }}=tk" \
            --include-data-files=ms-playwright.tgz=ms-playwright.tgz \
            --output-dir=build \
            --lto=no \
            --assume-yes-for-downloads


      # 可选：ad-hoc 签名，降低 Gatekeeper 提示（不是正式签名/公证）
      - name: Ad-hoc codesign
        run: |
          codesign --force --deep --sign - "build/WebImageSaver.app" || true

      - name: Zip artifact (macOS .app)
        run: |
          cd build
          zip -r ../WebImageSaver-macos.zip "WebImageSaver.app"

      - uses: actions/upload-artifact@v4
        with:
          name: WebImageSaver-macos.zip
          path: WebImageSaver-macos.zip
